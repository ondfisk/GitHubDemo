---
name: Application

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/application.yml
      - src/**
      - tests/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/application.yml
      - src/**
      - tests/**
  workflow_dispatch: {}

permissions: {}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      configuration: Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.100-preview.6.24328.19

      - name: .NET Restore
        run: dotnet restore

      - name: .NET Build
        run: dotnet build --no-restore --configuration ${{ env.configuration }}

      - name: .NET Test
        run: dotnet test --no-build --verbosity normal --configuration ${{ env.configuration }}

      - name: .NET Publish
        run: dotnet publish src/MyApp/MyApp.csproj --no-build --configuration ${{ env.configuration }} --output app

      - name: Zip Artifact
        run: pushd app && zip -r ../app.zip . && popd

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: app.zip

      - name: Install EF Tool
        run: dotnet tool install --global dotnet-ef --prerelease

      - name: Generate EF Migration Script
        run: dotnet ef migrations script --idempotent --project src/MyApp/ --startup-project src/MyApp/ --no-build --output migrate.sql

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: migrate.sql
          path: migrate.sql

  staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    environment: Staging

    env:
      CONNECTION_STRING:

    permissions:
      id-token: write

    steps:
      - name: Download App
        uses: actions/download-artifact@v4
        with:
          name: app
          path: .

      - name: Download EF Migration Script
        uses: actions/download-artifact@v4
        with:
          name: migrate.sql
          path: .

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Connection String
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            echo "CONNECTION_STRING=$(az webapp config connection-string list --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.WEBAPP }} --slot ${{ vars.DEPLOYMENT_SLOT }} --query [].value --output tsv)" >> "$GITHUB_ENV"

      - name: Apply EF migration script
        uses: Azure/sql-action@v2
        with:
          connection-string: ${{ env.CONNECTION_STRING }}
          path: migrate.sql

      - name: Deploy Web App
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az webapp deploy --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.WEBAPP }} --slot ${{ vars.DEPLOYMENT_SLOT }} --src-path app.zip --clean

  production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: staging
    if: github.ref == 'refs/heads/main'
    environment: Production

    env:
      CONNECTION_STRING:

    permissions:
      id-token: write

    steps:
      - name: Download EF Migration Script
        uses: actions/download-artifact@v4
        with:
          name: migrate.sql
          path: .

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Connection String
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            echo "CONNECTION_STRING=$(az webapp config connection-string list --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.WEBAPP }} --query [].value --output tsv)" >> "$GITHUB_ENV"

      - name: Apply EF migration script
        uses: Azure/sql-action@v2
        with:
          connection-string: ${{ env.CONNECTION_STRING }}
          path: migrate.sql

      - name: Swap Staging With Production
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az webapp deployment slot swap --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.WEBAPP }} --slot ${{ vars.DEPLOYMENT_SLOT }}
